Server Compilation:
-------------------
  *NIX Compilation:
  -----------------
    IF: You already have argtable2 installed and working on your system
      - Update argtable2's path for the include and the static library in
      the makefile
      - (If everything else is correct) make (or make dlv-server-dynamic if
      you prefer to have argtable2 dynamically linked)
    ELSE
      - Fetch argtable2 from http://argtable.sourceforge.net/
      - Follow the instructions in the package to compile/install the library
      (if you plan to use it only for this software we advise you to use
      'path_to_this_folder/argtable2' as a prefix in the 'configure' command:
      doing so you won't have to edit the makefile)
      - (If everything else is correct) make (or make dlv-server-dynamic if
      you prefer to have argtable2 dynamically linked)

  Windows Compilation:
  --------------------
    We only compiled the software using MinGW/MSYS and therefore advise you
    to do the same unless you are familiar with the intricacies of compiling
    C++ code for the Windows platform.
    If you choose the MinGW/MSYS way follow the *NIX instructions provided in
    this document (pay attention to the compiler's path, it most certainly will
    be different from its *NIX counterpart: adjust the makefile accordingly;
    the '-ansi' flag in CFLAGS may cause problems under Windows, if the
    software fails to compile try removing it before submitting error reports).

  Cross-compilation from *NIX to Windows using MinGW:
  ---------------------------------------------------
    - Unless you already have you should cross-compile argtable2 (instructions
    in the package)
    - Edit makefile to substitute g++ with the appropriate MinGW counterpart
    - (If everything else is correct) make (or make dlv-server-dynamic if you
    prefer to have argtable2 dynamically linked; the '-ansi' flag in CFLAGS
    may cause problems under Windows, if the software fails to compile try
    removing it before submitting error reports)

  If you want to use the Windows binary thusly produced on machines that do
  not have the necessary compilation environment installed we advise you to
  add a '-static' flag after '-lws2_32' in the makefile.


External Predicates Compilation:
--------------------------------
  GNU/Linux Compilation:
  ----------------------
    - Download the necessary files from the DLV-EX Project's website
    (https://www.mat.unical.it/ianni/wiki/dlvex): they can be found in the
    "Scripts and Headers" subsection of the "Download" section
    - Unpack the archive and copy every file from the newly create LIB folder
    to the LIB subfolder of this very folder and change your current directory
    to the LIB subfolder
    - Issue the command './dynamic at_builtin' and wait until the predicates
    finish to compile
  Windows Compilation:
  --------------------
    We only compiled the software using MinGW/MSYS and therefore advise you
    to do the same unless you are familiar with the intricacies of compiling
    C++ code for the Windows platform.
    - Follow the first two steps of the GNU/Linux Compilation guide
    - Edit the file 'dlvlib' so that the line that used to be:
      'libtool --mode=link [...] -lm'
    becomes:
      'libtool --mode=link [...] -lm -lws2_32'
    (just add '-lws2_32' to the end of the line)
    - Issue the command './dlvlib create at_builtin' and wait until the
    predicates finish to compile
